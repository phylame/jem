/*
 * Copyright 2017 Peng Wan <phylame@163.com>
 *
 * This file is part of Jem.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package jem.imabw

import javafx.beans.value.WeakChangeListener
import javafx.concurrent.Worker
import jclp.setting.MapSettings
import jclp.text.Text
import jem.Book
import jem.JemException
import jem.epm.*
import jem.title

fun defaultMakerSettings() = MapSettings().apply {
    this[MAKER_OVERWRITE_KEY] = true
    this[MAKER_VDM_COMMENT_KEY] = "generated by ${Imabw.name} v${Imabw.version}"
}

class UnknownEpmException() : JemException("")

class LoadBookTask(val param: ParserParam) : ProgressTask<Book>() {
    init {
        stateProperty().addListener(WeakChangeListener { _, _, state ->
            if (state == Worker.State.RUNNING) {
                Imabw.fxApp.updateProgress("Loading '${param.path}'...")
            }
        })
    }

    override fun call() = EpmManager.readBook(param) ?: throw UnknownEpmException()
}

class SaveBookTask(val param: MakerParam) : ProgressTask<String>() {
    init {
        stateProperty().addListener(WeakChangeListener { _, _, state ->
            if (state == Worker.State.RUNNING) {
                Imabw.fxApp.updateProgress("Writing '${param.book.title}' to '${param.path}'...")
            }
        })
    }

    override fun call() = EpmManager.writeBook(param) ?: throw UnknownEpmException()
}

class LoadTextTask(private val text: Text) : ProgressTask<String>() {
    override fun call() = text.toString()
}
